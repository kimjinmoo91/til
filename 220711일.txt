-버전관리 : 협업을 위한 공유
  ex) 밥, 닭찌찌 (목구멍에 안넘어가서 파짐치추가)
      밥, 닭찌찌, 파짐치 (뭔가 부족해서 조미김 추가)
      밥, 닭찌찌, 파짐치, 조미김 (먹다보니 이 순서대로 밥먹다간 밥먹기 싫어질 것 같아 입맛 돋구고 침샘을 자극할 방법으로 바꿔주면 좋겠군?)
      밥, 파짐치, 닭찌찌, 조미김 (이 순서라면 술술 넘어갈 조합같군그래)
  업데이트(수정,추가,제거)

-커밋 : 버전관리한 내용을 다른 사람도 알아볼 수 있게 적어주는 제목?문구? 그 느낌~


-Git / GitHub
 Git = 로컬에서 버전 관리
        코드와 코드의 수정내역 기록, 관리 버전 프로그램, 브랜치 생성가능
        로컬 저장소 사용 -> 공유 X

 GitHub = 클라우드 개념의 서버 사용 -> 로컬 버전관리 PUSH 공유 O

 느낀 바 이 둘의 관계는 음.. 자녀의 미래를 위한 부모의 뒷바라지, 희생같은 느낌. 
  노부모보단 젊은 층, 자녀들이 세상의 영향을 더 잘 미칠 수 있기에 자녀들의 꿈을 더 현실화 해줄 수 있도록 밑거름을 만들어주는 깃.
 만들어진 밑거름으로 자란 자녀는 세상에 부딪히며 성장하는 깃헙 요런느낌. 크~ 깃과 깃헙 이렇게 보면 뭔가.. 짠한 관계같군.. 흙흙...



-원격 repo, 로컬 repo
 깃헙으로 푸시(업로드, 반영), 풀(다운로드, 가져오기)를 리모트 리포지토리(원격repo)하는 것.
 로컬repo는 내 컴퓨터 개념과 깃헙을 연결해주는 트래킹. 한마디로 '너와~ 나의~ 연결고리~'란 것.
 저것이 되야 원격repo를 할 수 있는듯 함. 연결이 되있어야 푸시, 풀 됨.!! 

무튼 이제 1주차 시작함. 프로젝트 긴장되지만,, 배워보자. 이 세계를

